ls
clear
ls
echo "aspas ->'"
Test  10: ❌ echo "aspas -> ' "
echo "aspas -> ' "
echo "aspas -> ' "
clear
ls
echo "$HOME
echo "$HOME"
echo "$HOME'
echo "aspas -> ' "
ls
clear
echo "aspas -> ' "
echo "$HOME'
echo "$HOME"
echo '$HOME'
echo '$HOME"
echo "aspas ->'"
exit
ls
clear
echo "aspas ->'"
echo '$HOME"
echo '$HOME'
echo "$HOME"
echo "aspas -> ' "
claer
ls
echo "aspas -> ' "
echo "$HOME"
echo '$HOME'
clear
ls
echo "$HOME"
echo '$HOME'
echo "aspas -> ' "
echo "aspas -> ' "
ls
clear
echo "aspas -> ' "
echo "aspas -> ' "
echo '$HOME'
clear
echo "aspas -> ' "
echo '$HOME'
echo "aspas -> ' "
echo '$HOME'
echo "aspas -> ' "
echo '$HOME'
echo "aspas -> ' 
echo "$HOME"
"aspas ->'"
echo "aspas ->'"
ls
echo "aspas ->'"
echo "aspas -> ' "
echo "aspas -> ' 
echo "aspas -> ' "
echo "aspas ->'"
echo "$HOME"
echo "$HOME
echo "$HOME'
echo '$HOME'
echo "aspas ->'"
clear
echo "exit_code ->$? user ->$USER home -> $HOME"

echo "exit_code ->$? user ->$USER home -> $HOME"
echo 'exit_code ->$? user ->$USER home -> $HOME'
export A-

export A-
echo $?
export HELLO-=123
echo $?
 export =
echo $?
export 123
echo $?
cd 123123
echo $?
exit 42 world
echo $?
clear
clear
cd minishell
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
ls
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
clear
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
echo $PATH
clear
echo $PATH
clear
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
clear
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
clear
ls
cd minishell
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
ps aux | grep cat
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
echo helloworld
echo helloworld
echo hell oworld
echo hello'world'
 echo hello""world

 cd $PWD hi

 exit +"100"

cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cd minishell_tester/
cat <"./test_files/infile_big" | echo hi

clear
cd minishell_te
cd minishell_tester/
grep hi <./test_files/infile

grep hi <./test_files/infile

grep hi "<infile" <         ./test_files/infile

clear
cd minishell_tester/
cd minishell_tester/
export HELLO="123 A-"
echo $?
$PWD
$EMPTY
$EMPTY echo hi
./test_files/invalid_permission
./missing.out
missing.out
"aaa"
test_files
./test_files
/test_files
minishell.h
$
$?
README.md
echo hello
(
(
echo hello
$PWD
echo hello'world'
echo hello'world'
echo a'
echo ' a'
echo ' a"
echo " a"
echo " a'
echo "" "" a
ls -la
clear
ls 
ls 
ls 
ls  
echo hello world; echo $?; exit
ls 
ls
a | b
cat
ls
echo "HELLO"
echo "HELLO
echo "HELLO'
echo 'HELLO'
echo '$HOME'
echo '$HOME"
echo "$HOME"
echo "$HOME
echo "$HOME'
env
unset PATH
env
ls
pwd
env
cd /mnt/c/Users/USER/Desktop/minishell/Minishell && echo '"ls "' | ./minishell
cd /mnt/c/Users/USER/Desktop/minishell/Minishell && sed -i 's/token->str\[0\] != .\\0. || token->quote != QUOTE_NONE/token->str[0] != '"'"'\\0'"'"'/' src/parser/tokenizer.c
unset PATH; ls
unset PATH
ls
nonexistent1 | nonexistent2
ls 
a | b
ls 
cat
echo "hello   "
"ls "
"ls "
nonexistent1 | nonexistent2
nonexistent1 | nonexistent2
"ls "
ls 
ls 
"ls "
ls 
exit
$
$?
echo $?
false
false
$?
echo $
$
$?
ls 
exit
ls 
ls
exit
echo hello 
exit
"ls "
exit
ls 
exit
ls 
exit
"ls "
exit
"ls "
exit
ls 
exit
$EMPTY echo hi
echo "[$EMPTY]"
echo $EMPTY echo hi
$UNSET echo hi
$EMPTY echo hi
$EMPTY echo hi
$EMPTY
ls 
exit
$EMPTY
echo [$EMPTY]
echo $EMPTY hi
$EMPTY
$EMPTY
$EMPTY echo hi
$EMPTY
$EMPTY echo hi
echo [$]
ls
ls 
cat
ls 
exit
ls 
exit
ls 
ls
exit
echo hello 
exit
ls   
"ls "
exit
ls 
exit
echo hello world
$EMPTY
echo [$]
pwd 
exit
ls 
exit
ls
ls 
exit
echo $
exit
$EMPTY
exit
$EMPTY
exit
echo "$EMPTY test"
exit
$EMPTY
exit
$EMPTY
echo $?
exit
echo $?
exit
$?
echo $?
exit
echo test
exit
exit
exit
exit
exit
echo $?
exit
exit
exit
$
exit
$
echo $?
exit
$?
echo $?
exit
ls 
echo "test 135: ls with trailing space"
$EMPTY echo hi
echo "test 134: EMPTY with echo"
$EMPTY
echo "test 134: EMPTY alone, exit code: $?"
$
echo "test: $ alone, exit code: $?"
$?
echo "test: \$? alone, exit code: $?"
exit
ls 
echo "trailing space test completed"
exit
$EMPTY echo hi
echo "Test 135 exit code: $?"
$EMPTY
echo "Test 134 exit code: $?"
exit
$
echo "$ command exit code: $?"
exit
$?
echo "$? command exit code: $?"
exit
echo test   
echo "multiple spaces test completed"
exit
pwd 
echo "pwd with trailing space works"
$EMPTY pwd
echo "EMPTY + pwd works"
echo "exit code after EMPTY: $?"
echo hello 
echo "echo with trailing space works"
exit
echo "$EMPTY test"
echo '$EMPTY test'
echo "dollar test: $"
exit
echo "=== FINAL MINISHELL TEST ==="
ls 
echo "✅ Trailing space test"
$EMPTY echo SUCCESS
echo "✅ EMPTY expansion test: $?"
$EMPTY
echo "✅ EMPTY alone test: $?"
$
echo "✅ Dollar alone test: $?"
$?
echo "✅ Dollar-question test: $?"
echo "All major fixes verified!"
exit
echo "=== TRAILING SPACE TESTS ==="
ls 
echo "ls with 1 space: SUCCESS"
echo test  
echo "echo with 2 spaces: SUCCESS"
pwd   
echo "pwd with 3 spaces: SUCCESS"
exit
echo "=== EMPTY VARIABLE TESTS ==="
$EMPTY echo hi
echo "Test 135 exit code: $?"
$EMPTY
echo "Test 134 exit code: $?"
$EMPTY pwd
echo "EMPTY+pwd exit code: $?"
exit
echo "=== DOLLAR COMMAND TESTS ==="
$
echo "$ alone exit code: $?"
$?
echo "$? alone exit code: $?"
exit
echo "=== QUOTE TESTS ==="
echo "$EMPTY test"
echo '$EMPTY test'
echo "$"
echo '$'
exit
echo "=== PIPELINE TESTS ==="
echo test | cat 
echo "pipe with trailing space: SUCCESS"
echo hello > /tmp/test  
cat /tmp/test
echo "redirect with trailing space: SUCCESS"
rm -f /tmp/test
exit
echo "=== BUILTIN TESTS ==="
cd /tmp 
echo "=== ERROR HANDLING TESTS ==="
echo "only spaces: exit code $?"
echo "only tabs: exit code $?"
$NONEXISTENT
echo "nonexistent var: exit code $?"
exit
echo "=== STRESS TESTS ==="
for i in {1..5}; do echo test$i ; done
echo "loop with trailing spaces completed"
$EMPTY $EMPTY $EMPTY echo multiple_empty
echo "multiple empty vars: exit code $?"
exit
echo "🧪 COMPREHENSIVE FINAL TEST 🧪"
echo ""
echo "1. Trailing Space Fix:"
ls 
echo "✅ ls with trailing space works"
echo ""
echo "2. EMPTY Variable Tests:"
$EMPTY echo hi
echo "✅ Test 135: $?"
$EMPTY
echo "✅ Test 134: $?"
echo ""
echo "3. Dollar Command Tests:"
$
echo "✅ $ command: $?"
$?
echo "✅ $? command: $?"
echo ""
echo "4. Mixed Edge Cases:"
echo hello   
echo "✅ Multiple trailing spaces work"
$EMPTY pwd
echo "✅ EMPTY + command: $?"
echo ""
echo "🎉 ALL TESTS COMPLETED 🎉"
exit
ls 
clear 
cd ..
cd ..
echo "Norm test başarılı!"
ls 
echo "Trailing space test: OK"
$EMPTY echo hi
echo "EMPTY test: $?"
exit
ls 
 ls
clear
ls -la   
clear
ls     -la
clear
pwd
env
clear
./minishell
env
exit 12313
ls 
 ls 
clear
cd ..
echo hi
echo hello
exit
echo hello | cat
exit
echo hello world
exit
echo hello | cat -e
exit
ls | grep mini
exit
echo test > test_output.txt
cat test_output.txt
exit
echo "hello world"
exit
echo $PWD
exit
env | sort | head -5
exit
echo hello | cat
exit
ls | grep mini
echo hello | cat | wc -l
ls
 ls
ls  
ls -la   
ls               -la   
ls               -la   "
clear
cat
clear
ls
make fclean
  ls   
clear
exit
env
env | grep PATH
echo "PATH variable:"
echo $PATH
echo "Testing specific failing cases..."  
echo "Test 134: \$EMPTY"
echo "\$EMPTY" | timeout 5 ./Minishell/minishell > /dev/null 2>&1
echo "Exit code: $?"  
echo "Test 135: \$EMPTY echo hi"
echo "\$EMPTY echo hi" | timeout 5 ./Minishell/minishell 2>&1 | head -n 5
echo "Exit code: $?"
echo "Test 144: \$"
echo "\$" | timeout 5 ./Minishell/minishell > /dev/null 2>&1
echo "Exit code: $?"          
echo "Test 145: \$?"
echo "\$?" | timeout 5 ./Minishell/minishell > /dev/null 2>&1
echo "Exit code: $?"
cat Minishell/.minishell_history
echo "=== Bash comparison ==="
echo "Bash \$EMPTY:"
bash -c "\$EMPTY" > /dev/null 2>&1
echo "Exit code: $?"
echo "Bash \$EMPTY echo hi:"
bash -c "\$EMPTY echo hi" 2>&1
echo "Exit code: $?"
echo "Bash \$:"
bash -c "\$" > /dev/null 2>&1
echo "Bash exit code for \$: $?"
echo "Bash \$?:"
bash -c "\$?" > /dev/null 2>&1
echo "Bash exit code for \$?: $?"
echo "=== End of specific tests ==="
echo "Testing completed. Check the exit codes and outputs for any discrepancies."
echo "If any tests failed, please review the Minishell implementation for potential issues."
echo "End of test script."
echo "All tests executed. Review the outputs for any discrepancies."
echo "If any tests failed, please review the Minishell implementation for potential issues."
echo "End of test script."
echo "All tests executed. Review the outputs for any discrepancies."
echo "If any tests failed, please review the Minishell implementation for potential issues."
ls -la | grep minishell | grep -v grep
grep -i "minishell" Minishell/.minishell_history
| grep -v "grep"
grep -i "minishell" Minishell/.minishell_history | grep -v "grep"
echo test | cat
echo "echo test | cat" | ./minishell
ls -la | grep minishell
echo "ls -la | grep minishell" | ./minishellenv | head -3
pwd && echo 'Current directory displayed'
echo hello | cat | cat | wc -w
echo $HOME
echo 'single quotes test'
echo "double quotes with $USER inside"
export TEST_VAR=42 && echo $TEST_VAR
which ls
echo hello world | rev
$
$?
$EMPTY
$EMPTY
$EMPTY echo hi
$
$?
$EMPTY
$EMPTY echo hi
$
$?
$EMPTY
$EMPTY echo hi
$
$?
$EMPTY
$EMPTY echo hi
$
$?
$EMPTY
$EMPTY echo hi
$
$?
$EMPTY
$EMPTY echo hi
$
$?
$EMPTY
$EMPTY echo hi
$?
cd Minishell/
minishell_tester/
ls
./tester
pwd
echo "Testing specific failing cases..."
echo "Test 144: \$"
echo "\$" | timeout 5 ./Minishell/minishell > /dev/null 2>&1
echo "Exit code: $?"echo "" ""
echo "" "" a
echo "" "" a
echo "" "" a | cat -e
echo 'hello world' | wc -c
echo 'test' | grep test
echo 'test' | grep test
echo "" "" a | cat -e
make
echo "echo \"\" \"\" a" | ./minishell
echo \ \ a
echo 'echo "" "" a' | ./minishell
echo "" "" a
echo "" "" a
echo "" "" a
echo "" "" a | cat -e
echo "" "" a | cat -e
ls  
  ls
clear
exit
$EMPTY echo hi
$EMPTY echo hi
$EMPTY echo hi
$EMPTY echo hi
echo hi
printf "%s|%s|%s\n" a "" b
env | grep EMPTY
echo "$EMPTY" END
$EMPTY echo hi
echo "$EMPTY" END
echo "" "" a
echo '$PWD'
echo 'exit_code ->$? user ->$USER home -> $HOME'
echo "PWD is $PWD"
$EMPTY echo hi
  ls
 ls   
ls -la    
clear
a | b
echo "" "" a
exit
cat
clear
cat
clear
   ls
ls   
echo "" "" ""
echo "" "" "" cat -e
a | b
echo "echo a | echo b" | ./minishell
echo a | echo b
ls | wc
xxxxx | yyyyy
xxxxx
a | b
echo "" "" a
ls    
   ls
ls
clear
CAT
cat
clear
echo hello
ls | wc
echo $PWD
exit
echo hello > test.txt
cat < test.txt
rm test.txt
exit
echo hello
exit
echo hello
exit
echo $PWD
exit
echo $PWD
exit
echo $PWD
exit
ls | wc
echo hello > test.txt
cat < test.txt
rm test.txt
exit
echo hello
echo $PWD
exit
echo hello world
ls | wc -l
echo $PWD
export TEST=value
echo $TEST
exit
ls -la
echo test
pwd && env | wc -l && echo 'hello world' | grep hello
echo hello | grep h
echo test
echo test
echo hello world
pwd
echo test | grep t
export TEST=hello && echo 
echo 'hello world'
echo test
echo test
ls | head -3
env | grep USER
echo "hello world"
cat minishell.h | head -20 | grep include | wc -l
echo test
cat minishell.h | head -5 | wc -l
cat minishell.h | head -5 | wc -l
ls | grep m | head -2 | wc -l | cat | grep 2
echo "$(printf "%1000s" | tr " " "A")"
export VAR1=test1; export VAR2=test2; echo $VAR1$VAR2
echo "Hello World"
pwd
env | head -5
export TEST_VAR="test value" && echo $TEST_VAR
exit
clear
echo "" "" a
ls  
   ls
ls     -la
clear
"'
""
""''
""'
clear
cat
clear
